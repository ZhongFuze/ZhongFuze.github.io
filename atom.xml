<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>泽泽馥泽泽杂记</title>
  
  <subtitle>Hello World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhongfuze.github.io/"/>
  <updated>2018-08-09T13:31:09.492Z</updated>
  <id>http://zhongfuze.github.io/</id>
  
  <author>
    <name>ZhongFuze</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Paper-Reading</title>
    <link href="http://zhongfuze.github.io/2018/08/09/Paper-Reading/"/>
    <id>http://zhongfuze.github.io/2018/08/09/Paper-Reading/</id>
    <published>2018-08-09T02:46:45.000Z</published>
    <updated>2018-08-09T13:31:09.492Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Paper-Reading-——-Attention-based-Transactional-Context-Embedding-for-Next-Item-Recommendation"><a href="#Paper-Reading-——-Attention-based-Transactional-Context-Embedding-for-Next-Item-Recommendation" class="headerlink" title="Paper Reading —— Attention-based Transactional Context Embedding for Next-Item Recommendation"></a>Paper Reading —— Attention-based Transactional Context Embedding for Next-Item Recommendation</h2><p>基于注意力的事务上下文嵌入下一项推荐</p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>在电商交易环境中向user推荐下一个item,这样的应用非常实用但是具有挑战性。Transactional context 是指在交易记录中的observed items。<br>大多数现有的推荐系统，主要是考虑recently occurring items 而不是 all the ones observed in the current context，这些算法通常假设交易中的items之间存在严格的顺序，但是这并不总是起作用，a long transaction(一个比较长的交易范围)通常包含许多对下一个选择的item没有关联或者说是没有用的item信息，这往往会overwhelm一些真正相关的item的影响。<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">举个栗子~</span><br><span class="line">让我们举一个例子来说明上述问题。</span><br><span class="line">用户首先将三个项目&#123;milk，apple，<span class="keyword">orange&#125;放入购物车中，</span></span><br><span class="line"><span class="keyword">然后将&#123;bread&#125;添加到同一购物车中。</span></span><br><span class="line"><span class="keyword">随后，交易被确定为&#123;milk，apple，orange，bread&#125;。</span></span><br><span class="line"><span class="keyword">如果我们将前三个项目作为上下文而最后一个项目作为推荐的目标，</span></span><br><span class="line"><span class="keyword">现有方法可能会建议&#123;vegetables&#125;，如&#123;green </span>salad&#125;，</span><br><span class="line">因为最近的上下文项目（<span class="keyword">orange和apple）。</span></span><br><span class="line"><span class="keyword">但是，目标物品面包的选择可能取决于第一个项目（milk）。</span></span><br><span class="line"><span class="keyword">在这种情况下，推荐系统应该更多地关注milk而不是orange和apple，</span></span><br><span class="line"><span class="keyword">因为milk可能与下一个选择的bread更相关。</span></span><br><span class="line"><span class="keyword">此示例显示了下一项建议的重要性，这可能会被交易中的无关项误导。</span></span><br><span class="line"><span class="keyword">此外，真实世界的交易数据通常仅指示那些项目与项目之间的订单</span></span><br><span class="line"><span class="keyword">（例如，项目时间戳）共同出现在交易中。</span></span><br><span class="line"><span class="keyword">因此，推荐具有严格订单的交易项目可能是不可能和现实的。</span></span><br></pre></td></tr></table></figure></p><p>作者提出一个推荐算法，这个算法不仅考虑当前交易中所有的observed items，而且还要用不同的relevance(相关性)对它们进行加权，以建立一个attentive context(注意力上下文)，以高概率输出正确的下一个项目。模型——基于注意的事务嵌入模型（ATEM），用于上下文嵌入，以在不假定顺序的情况下对每个观察到的项目进行加权。对交易数据集的实证研究证明，ATEM在准确性和新颖性方面都显着优于最先进的方法。</p><h2 id="Main-Algorithm"><a href="#Main-Algorithm" class="headerlink" title="Main Algorithm"></a>Main Algorithm</h2><script type="math/tex; mode=display">x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}</script><p>\(x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}\)</p><h2 id="Motivation"><a href="#Motivation" class="headerlink" title="Motivation"></a>Motivation</h2><p>推荐系统（RS）发挥着重要作用，特别是在商业领域。然而，大多数现有的RS理论面临各种问题，例如倾向于重复与用户可能已经选择的类似的项目。</p><p>在现实数据场景中，用户可能更喜欢新颖且与手头上现有的不同的项目。为了解决这个问题，需要在交易上下文中进行新的推荐，即在交易中已经选择的内容中挖掘。一方面，分析基于RS交易序列，通过分析交易间耦合关系，产生更合理和可靠的新交易建议，例如下一个购物车(basket)和下一项目(item)建议。这些与基于user profile和item profile构建的典型RS方法完全不同。</p><p>然而，当一个items集合被放入一个transaction时，仍然不清楚应该下一个项目应该推荐什么。这产生了通过分析事务内依赖性来推荐事务上下文下的下一项的需要。</p><p>(transactional context:用于推荐下一个项目的上下文是指对应的项目相关交易，例如，由多个所选项目组成的购物篮记录)</p><h2 id="Related"><a href="#Related" class="headerlink" title="Related"></a>Related</h2><p>了解transaction context中items之间的相关性和转换非常具有挑战性。在TBRS中，一个普遍的挑战是建立一个注意力(attention)的背景，以高概率输出真正的下一个选择。</p><p>一些现有方法旨在通过将transaction as the context来生成推荐。然而，大多数现有TBRS利用具有排序假设的部分上下文。</p><p><strong>顺序模式挖掘</strong>（2012）用于使用具有严格顺序假设的items之间的关联来预测下一项。但是，上下文中的项可能是任意的，这可能无法匹配任何已挖掘的模式。</p><p><strong>马尔可夫链（MC）</strong>（2012）是建模顺序数据的另一种方法。然而，MC只捕获从一个项目到下一个项目的转换，而不是从上下文序列中捕获，即，它只能捕获第一次转换。</p><p>最近，基于<strong>矩阵隐式因子分解（MF）</strong>的方法（2016）将转移概率的矩阵从然而，由于现实世界中的幂律分布数据，MF很容易受到稀疏性问题的困扰（2016）。</p><p>受Deep Learning的巨大成功的启发（2015），应用<strong>深度递归神经网络（RNN）</strong>来模拟顺序数据的事务，但由复杂结构引起的高计算成本阻止了其应用于大数据。</p><p>此外，<strong>MC，MF和RNN最初是为具有严格自然顺序的时间序列数据而设计的</strong>，因此它们不具有无序的交易。</p><p>(例如，或面包是否首先放入购物车中没有区别。另外，现有方法不能有效地加权上下文中的项目，即更多地关注那些相关项目。这种注意区分非常重要，特别是对于长期交易而言，这些交易往往包含许多与下一个选择无关的项目。)</p><p>最近，受心理认知方案的启发，注意机制在上下文学习相关方面显示出惊人的潜力。 通过搜索图像中与答案相关的区域，呈现用于图像问题回答的堆叠注意网络（SAN）。 另一个新模型在人类关注的指导下学习句子表征（Shaonan，Jiajun和Chengqing 2017）。 鉴于CV和NLP中的上下文学习注意机制的巨大成功，我们结合了一些想法并提出ATEM来模拟下一个项目推荐的注意上下文。</p><h2 id="Contribution"><a href="#Contribution" class="headerlink" title="Contribution"></a>Contribution</h2><p>本文通过提出一种基于注意力的交易嵌入模型（ATEM）来解决需求。 ATEM通过识别与下一个选择具有高度相关性的上下文项，在交易中的所有观察项目的嵌入（Embedding）上构建了一个关注的上下文（attention context）。构建了一个浅宽的广泛网络（wide-in-wide-out network）（Goth 2016），以减少时间和空间成本。具体而言，作者将注意机制（Shaonan，Jiajun和Chengqing 2017）纳入浅层网络，以在没有严格排序假设的情况下在事务中构建所有观察项目（observed items）的注意上下文(attention context)。由于注意机制，所提出的模型能够更多地关注更相关的items，而更少关注不太相关的items。因此，ATEM更有效，更强大，可以预测具有较少约束的事务中的下一个item。这项工作的主要贡献如下：</p><ul><li><p>基于注意力的模型学习一种注意力的上下文嵌入，强化了相关项目但忽略了与下一个选择无关的项目。 我们的方法不涉及对事务中项目的严格排序假设。</p></li><li><p>浅宽的宽广网络实现了ATEM，它对于大量项目的学习和预测更有效和高效。</p></li><li><p>实证研究表明</p><p>  ATEM在准确性和新颖性方面明显优于两个真实数据集上的最新TBRS;</p><p>  通过比较有无注意机制的方法，注意机制对TBRS产生显着差异。</p></li></ul><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Paper-Reading-——-Attention-based-Transactional-Context-Embedding-for-Next-Item-Recommendation&quot;&gt;&lt;a href=&quot;#Paper-Reading-——-Attention-
      
    
    </summary>
    
      <category term="recommendation" scheme="http://zhongfuze.github.io/categories/recommendation/"/>
    
    
      <category term="embedding,recommendation" scheme="http://zhongfuze.github.io/tags/embedding-recommendation/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="http://zhongfuze.github.io/2018/08/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://zhongfuze.github.io/2018/08/08/我的第一篇文章/</id>
    <published>2018-08-08T12:38:10.000Z</published>
    <updated>2018-08-09T06:16:41.799Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo-搭建过程"><a href="#hexo-搭建过程" class="headerlink" title="hexo 搭建过程"></a>hexo 搭建过程</h3><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><p>下载地址：<a href="http://nodejs.cn/download/" title="node.js下载地址">http://nodejs.cn/download/</a></p><h3 id="git环境"><a href="#git环境" class="headerlink" title="git环境"></a>git环境</h3><p>下载地址：<a href="https://gitforwindows.org/" title="git下载地址">https://gitforwindows.org/</a></p><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><p><a href="https://github.com" title="github">https://github.com</a></p><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><p>我的文件夹建立在D盘</p><p>打开Git Bash，输入：</p><p><code>cd d:</code></p><p><code>cd blog</code></p><p>接着，输入</p><p><code>npm install hexo</code></p><p>如果出现说npm没有安装的话，请移步编辑用户环境变量，将npm加入环境变量中，重启git bash即可。</p><p><img src="https://i.imgur.com/lxxjOZZ.png" alt="git bash command not found"></p><p>再次进入文件夹执行安装命令，如果出现<br><code>npm WARN deprecated titlecase@1.1.2: no longer maintained</code>可以不用理会</p><p><img src="https://i.imgur.com/k5t9hUy.png" alt="npm-install"></p><p>如果目录下出现文件夹就说明初始步骤基本成功了。</p><p><img src="https://i.imgur.com/zd3mocI.png" alt="success"></p><h3 id="hexo命令"><a href="#hexo命令" class="headerlink" title="hexo命令"></a>hexo命令</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init  --初始化hexo环境,这时会在目录下自动生成hexo的文件</span><br><span class="line">npm install --安装npm依赖包</span><br><span class="line">hexo generate --生成静态页面</span><br><span class="line">hexo<span class="built_in"> server </span>--生成本地服务</span><br></pre></td></tr></table></figure><p>如果出现hexo command not found（笔者安装过程好坎坷啊！！！）</p><p><img src="https://i.imgur.com/IUCg8Rt.png" alt="hexo not found"></p><p>解决方法：找到刚刚新建的blog文件夹，xxx/blog/hexo/bin<br>将这个路径添加到环境变量(xxx为自定义的路径,笔者的就是<code>D:/blog/hexo/bin</code>)</p><p>在blog路径下新建一个文件夹<code>hexo</code><br>执行hexo init需要在一个空的文件夹下执行，执行过程和结果如下图</p><p><img src="https://i.imgur.com/MtKSpJR.png" alt="success install hexo"></p><p><img src="https://i.imgur.com/vY6OfDn.png" alt="success install npm"></p><p><img src="https://i.imgur.com/02NdrSn.png" alt="generate static page"></p><p><img src="https://i.imgur.com/jWZeg9Z.png" alt="start local server"></p><p>打开<code>http://localhost:4000/</code>看看是否启动成功，启动后会出现这个页面。</p><p><img src="https://i.imgur.com/J23fih9.png" alt="hexo hello page"></p><h3 id="发布local到internet"><a href="#发布local到internet" class="headerlink" title="发布local到internet"></a>发布local到internet</h3><p>使用github创建远程仓库，新建一个跟自己账号名字一样的空仓库</p><p>接着打开本地的<code>hexo</code>文件夹中的_config.yml文件</p><p><img src="https://i.imgur.com/QxQYOsE.png" alt="config"></p><p>打开文件编辑</p><p><img src="https://i.imgur.com/jPNRlqz.png" alt="open config.yml"></p><p>文件末，将deploy修改如下：</p><p>(使用自己repo地址)<br><img src="https://i.imgur.com/QG1dlfD.png" alt="my git"></p><p><img src="https://i.imgur.com/K2UXXYS.png" alt="setting 1"></p><p><img src="https://i.imgur.com/MTkUTla.png" alt="setting 2"></p><p>编辑完成后保存。</p><p>下面的步骤如果不想新建文章的话，到这就结束了<br>保存后再Git Bash 中执行 </p><p><code>npm install hexo-deployer-git --save</code></p><p>最后执行<br><code>hexo deploy</code><br>这一步需要保证github上拥有本机的公钥！！！</p><p>备注：添加公钥方法</p><p>本地创建SSH Keys<br><code>ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</code></p><p>邮箱即为 github 注册邮箱,之后会要求确认路径和输入密码，一路回车。</p><p>成功的话会在 ~/下生成 .ssh文件夹，进去，打开 id_rsa.pub，复制里面的key即可。</p><p><code>cat ~/.ssh/id_rsa.pub</code></p><p>复制内容至github-Setting-GPG and SSH Keys-Add</p><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><p>在Git Bash输入<br><code>hexo new World</code></p><blockquote><p>注：World 是标题</p></blockquote><p><img src="https://i.imgur.com/nf9dS8J.png" alt="new page"></p><p>在<code>xxx/blog/hexo/source/_post</code>文件夹里会有<br>World.md</p><p>内容如下：<br><img src="https://i.imgur.com/3c8gyME.png" alt="world md"></p><p>在之后使用md格式编辑正文并保存。</p><h3 id="hexo-部署"><a href="#hexo-部署" class="headerlink" title="hexo 部署"></a>hexo 部署</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成静态文件</span></span><br><span class="line">hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安装 hexo-deployer-git</span></span><br><span class="line">npm install hexo-deployer-git --<span class="keyword">save</span></span><br></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>部署到github</span><br><span class="line">hexo <span class="keyword">deploy</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Fjm0Yie.png" alt="Deploy done"></p><p>打开<a href="http://zhongfuze.github.io">http://zhongfuze.github.io</a></p><p>完毕</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;hexo-搭建过程&quot;&gt;&lt;a href=&quot;#hexo-搭建过程&quot; class=&quot;headerlink&quot; title=&quot;hexo 搭建过程&quot;&gt;&lt;/a&gt;hexo 搭建过程&lt;/h3&gt;&lt;h3 id=&quot;node-js&quot;&gt;&lt;a href=&quot;#node-js&quot; class=&quot;he
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://zhongfuze.github.io/2018/08/08/hello-world/"/>
    <id>http://zhongfuze.github.io/2018/08/08/hello-world/</id>
    <published>2018-08-08T09:11:56.371Z</published>
    <updated>2018-08-08T09:11:56.373Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for
      
    
    </summary>
    
    
  </entry>
  
</feed>
